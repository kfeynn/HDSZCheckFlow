//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HDSZCheckFlow.UI.CostAssay.BudgetCost {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BudgetCostInfo")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BudgetCostInfo : global::System.Data.DataSet {
        
        private BudgetCostInfoMationDataTable tableBudgetCostInfoMation;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BudgetCostInfo() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected BudgetCostInfo(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BudgetCostInfoMation"] != null)) {
                    base.Tables.Add(new BudgetCostInfoMationDataTable(ds.Tables["BudgetCostInfoMation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BudgetCostInfoMationDataTable BudgetCostInfoMation {
            get {
                return this.tableBudgetCostInfoMation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            BudgetCostInfo cln = ((BudgetCostInfo)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BudgetCostInfoMation"] != null)) {
                    base.Tables.Add(new BudgetCostInfoMationDataTable(ds.Tables["BudgetCostInfoMation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBudgetCostInfoMation = ((BudgetCostInfoMationDataTable)(base.Tables["BudgetCostInfoMation"]));
            if ((initTable == true)) {
                if ((this.tableBudgetCostInfoMation != null)) {
                    this.tableBudgetCostInfoMation.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "BudgetCostInfo";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BudgetCost.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBudgetCostInfoMation = new BudgetCostInfoMationDataTable();
            base.Tables.Add(this.tableBudgetCostInfoMation);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBudgetCostInfoMation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BudgetCostInfo ds = new BudgetCostInfo();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BudgetCostInfoMationRowChangeEventHandler(object sender, BudgetCostInfoMationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BudgetCostInfoMationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDispname;
            
            private global::System.Data.DataColumn columnoneQ;
            
            private global::System.Data.DataColumn columntwoQ;
            
            private global::System.Data.DataColumn columnoneH;
            
            private global::System.Data.DataColumn columnPlanMoney;
            
            private global::System.Data.DataColumn columnlocalRealCost;
            
            private global::System.Data.DataColumn columncostPY;
            
            private global::System.Data.DataColumn columncostPP;
            
            private global::System.Data.DataColumn columnunionType;
            
            private global::System.Data.DataColumn columnoneSeason;
            
            private global::System.Data.DataColumn columntwoSeason;
            
            private global::System.Data.DataColumn columnoneHSeason;
            
            private global::System.Data.DataColumn columnPrintDateInfo;
            
            private global::System.Data.DataColumn columnPrintTitleInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetCostInfoMationDataTable() {
                this.TableName = "BudgetCostInfoMation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BudgetCostInfoMationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BudgetCostInfoMationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispnameColumn {
                get {
                    return this.columnDispname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oneQColumn {
                get {
                    return this.columnoneQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn twoQColumn {
                get {
                    return this.columntwoQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oneHColumn {
                get {
                    return this.columnoneH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlanMoneyColumn {
                get {
                    return this.columnPlanMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn localRealCostColumn {
                get {
                    return this.columnlocalRealCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn costPYColumn {
                get {
                    return this.columncostPY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn costPPColumn {
                get {
                    return this.columncostPP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unionTypeColumn {
                get {
                    return this.columnunionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oneSeasonColumn {
                get {
                    return this.columnoneSeason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn twoSeasonColumn {
                get {
                    return this.columntwoSeason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oneHSeasonColumn {
                get {
                    return this.columnoneHSeason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintDateInfoColumn {
                get {
                    return this.columnPrintDateInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintTitleInfoColumn {
                get {
                    return this.columnPrintTitleInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetCostInfoMationRow this[int index] {
                get {
                    return ((BudgetCostInfoMationRow)(this.Rows[index]));
                }
            }
            
            public event BudgetCostInfoMationRowChangeEventHandler BudgetCostInfoMationRowChanging;
            
            public event BudgetCostInfoMationRowChangeEventHandler BudgetCostInfoMationRowChanged;
            
            public event BudgetCostInfoMationRowChangeEventHandler BudgetCostInfoMationRowDeleting;
            
            public event BudgetCostInfoMationRowChangeEventHandler BudgetCostInfoMationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBudgetCostInfoMationRow(BudgetCostInfoMationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetCostInfoMationRow AddBudgetCostInfoMationRow(string Dispname, decimal oneQ, decimal twoQ, decimal oneH, decimal PlanMoney, decimal localRealCost, string costPY, string costPP, int unionType, string oneSeason, string twoSeason, string oneHSeason, string PrintDateInfo, string PrintTitleInfo) {
                BudgetCostInfoMationRow rowBudgetCostInfoMationRow = ((BudgetCostInfoMationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Dispname,
                        oneQ,
                        twoQ,
                        oneH,
                        PlanMoney,
                        localRealCost,
                        costPY,
                        costPP,
                        unionType,
                        oneSeason,
                        twoSeason,
                        oneHSeason,
                        PrintDateInfo,
                        PrintTitleInfo};
                rowBudgetCostInfoMationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBudgetCostInfoMationRow);
                return rowBudgetCostInfoMationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BudgetCostInfoMationDataTable cln = ((BudgetCostInfoMationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BudgetCostInfoMationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDispname = base.Columns["Dispname"];
                this.columnoneQ = base.Columns["oneQ"];
                this.columntwoQ = base.Columns["twoQ"];
                this.columnoneH = base.Columns["oneH"];
                this.columnPlanMoney = base.Columns["PlanMoney"];
                this.columnlocalRealCost = base.Columns["localRealCost"];
                this.columncostPY = base.Columns["costPY"];
                this.columncostPP = base.Columns["costPP"];
                this.columnunionType = base.Columns["unionType"];
                this.columnoneSeason = base.Columns["oneSeason"];
                this.columntwoSeason = base.Columns["twoSeason"];
                this.columnoneHSeason = base.Columns["oneHSeason"];
                this.columnPrintDateInfo = base.Columns["PrintDateInfo"];
                this.columnPrintTitleInfo = base.Columns["PrintTitleInfo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDispname = new global::System.Data.DataColumn("Dispname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispname);
                this.columnoneQ = new global::System.Data.DataColumn("oneQ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoneQ);
                this.columntwoQ = new global::System.Data.DataColumn("twoQ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntwoQ);
                this.columnoneH = new global::System.Data.DataColumn("oneH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoneH);
                this.columnPlanMoney = new global::System.Data.DataColumn("PlanMoney", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanMoney);
                this.columnlocalRealCost = new global::System.Data.DataColumn("localRealCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocalRealCost);
                this.columncostPY = new global::System.Data.DataColumn("costPY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncostPY);
                this.columncostPP = new global::System.Data.DataColumn("costPP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncostPP);
                this.columnunionType = new global::System.Data.DataColumn("unionType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunionType);
                this.columnoneSeason = new global::System.Data.DataColumn("oneSeason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoneSeason);
                this.columntwoSeason = new global::System.Data.DataColumn("twoSeason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntwoSeason);
                this.columnoneHSeason = new global::System.Data.DataColumn("oneHSeason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoneHSeason);
                this.columnPrintDateInfo = new global::System.Data.DataColumn("PrintDateInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintDateInfo);
                this.columnPrintTitleInfo = new global::System.Data.DataColumn("PrintTitleInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintTitleInfo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetCostInfoMationRow NewBudgetCostInfoMationRow() {
                return ((BudgetCostInfoMationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BudgetCostInfoMationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BudgetCostInfoMationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BudgetCostInfoMationRowChanged != null)) {
                    this.BudgetCostInfoMationRowChanged(this, new BudgetCostInfoMationRowChangeEvent(((BudgetCostInfoMationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BudgetCostInfoMationRowChanging != null)) {
                    this.BudgetCostInfoMationRowChanging(this, new BudgetCostInfoMationRowChangeEvent(((BudgetCostInfoMationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BudgetCostInfoMationRowDeleted != null)) {
                    this.BudgetCostInfoMationRowDeleted(this, new BudgetCostInfoMationRowChangeEvent(((BudgetCostInfoMationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BudgetCostInfoMationRowDeleting != null)) {
                    this.BudgetCostInfoMationRowDeleting(this, new BudgetCostInfoMationRowChangeEvent(((BudgetCostInfoMationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBudgetCostInfoMationRow(BudgetCostInfoMationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BudgetCostInfo ds = new BudgetCostInfo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BudgetCostInfoMationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BudgetCostInfoMationRow : global::System.Data.DataRow {
            
            private BudgetCostInfoMationDataTable tableBudgetCostInfoMation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BudgetCostInfoMationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBudgetCostInfoMation = ((BudgetCostInfoMationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dispname {
                get {
                    try {
                        return ((string)(this[this.tableBudgetCostInfoMation.DispnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“Dispname”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.DispnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oneQ {
                get {
                    try {
                        return ((decimal)(this[this.tableBudgetCostInfoMation.oneQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“oneQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.oneQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal twoQ {
                get {
                    try {
                        return ((decimal)(this[this.tableBudgetCostInfoMation.twoQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“twoQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.twoQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal oneH {
                get {
                    try {
                        return ((decimal)(this[this.tableBudgetCostInfoMation.oneHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“oneH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.oneHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PlanMoney {
                get {
                    try {
                        return ((decimal)(this[this.tableBudgetCostInfoMation.PlanMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“PlanMoney”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.PlanMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal localRealCost {
                get {
                    try {
                        return ((decimal)(this[this.tableBudgetCostInfoMation.localRealCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“localRealCost”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.localRealCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string costPY {
                get {
                    try {
                        return ((string)(this[this.tableBudgetCostInfoMation.costPYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“costPY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.costPYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string costPP {
                get {
                    try {
                        return ((string)(this[this.tableBudgetCostInfoMation.costPPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“costPP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.costPPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int unionType {
                get {
                    try {
                        return ((int)(this[this.tableBudgetCostInfoMation.unionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“unionType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.unionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oneSeason {
                get {
                    try {
                        return ((string)(this[this.tableBudgetCostInfoMation.oneSeasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“oneSeason”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.oneSeasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string twoSeason {
                get {
                    try {
                        return ((string)(this[this.tableBudgetCostInfoMation.twoSeasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“twoSeason”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.twoSeasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oneHSeason {
                get {
                    try {
                        return ((string)(this[this.tableBudgetCostInfoMation.oneHSeasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“oneHSeason”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.oneHSeasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrintDateInfo {
                get {
                    try {
                        return ((string)(this[this.tableBudgetCostInfoMation.PrintDateInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“PrintDateInfo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.PrintDateInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrintTitleInfo {
                get {
                    try {
                        return ((string)(this[this.tableBudgetCostInfoMation.PrintTitleInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“BudgetCostInfoMation”中列“PrintTitleInfo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBudgetCostInfoMation.PrintTitleInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispnameNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.DispnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispnameNull() {
                this[this.tableBudgetCostInfoMation.DispnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoneQNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.oneQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoneQNull() {
                this[this.tableBudgetCostInfoMation.oneQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstwoQNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.twoQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettwoQNull() {
                this[this.tableBudgetCostInfoMation.twoQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoneHNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.oneHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoneHNull() {
                this[this.tableBudgetCostInfoMation.oneHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlanMoneyNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.PlanMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlanMoneyNull() {
                this[this.tableBudgetCostInfoMation.PlanMoneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocalRealCostNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.localRealCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocalRealCostNull() {
                this[this.tableBudgetCostInfoMation.localRealCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscostPYNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.costPYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcostPYNull() {
                this[this.tableBudgetCostInfoMation.costPYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscostPPNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.costPPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcostPPNull() {
                this[this.tableBudgetCostInfoMation.costPPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunionTypeNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.unionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunionTypeNull() {
                this[this.tableBudgetCostInfoMation.unionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoneSeasonNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.oneSeasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoneSeasonNull() {
                this[this.tableBudgetCostInfoMation.oneSeasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstwoSeasonNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.twoSeasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettwoSeasonNull() {
                this[this.tableBudgetCostInfoMation.twoSeasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsoneHSeasonNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.oneHSeasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetoneHSeasonNull() {
                this[this.tableBudgetCostInfoMation.oneHSeasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintDateInfoNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.PrintDateInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintDateInfoNull() {
                this[this.tableBudgetCostInfoMation.PrintDateInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintTitleInfoNull() {
                return this.IsNull(this.tableBudgetCostInfoMation.PrintTitleInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintTitleInfoNull() {
                this[this.tableBudgetCostInfoMation.PrintTitleInfoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BudgetCostInfoMationRowChangeEvent : global::System.EventArgs {
            
            private BudgetCostInfoMationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetCostInfoMationRowChangeEvent(BudgetCostInfoMationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BudgetCostInfoMationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591