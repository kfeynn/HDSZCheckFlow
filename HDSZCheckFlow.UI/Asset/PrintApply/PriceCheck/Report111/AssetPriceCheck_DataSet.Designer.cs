//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HDSZCheckFlow.UI.Asset.PrintApply.PriceCheck.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AssetPriceCheck_DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AssetPriceCheck_DataSet : global::System.Data.DataSet {
        
        private FinallyPriceCheck_ApplyHeadInfoDataTable tableFinallyPriceCheck_ApplyHeadInfo;
        
        private FinallyPriceCheck_ApplyBodyInfoDataTable tableFinallyPriceCheck_ApplyBodyInfo;
        
        private FinallyPriceCheck_ApplyRecordInfoDataTable tableFinallyPriceCheck_ApplyRecordInfo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AssetPriceCheck_DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected AssetPriceCheck_DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FinallyPriceCheck_ApplyHeadInfo"] != null)) {
                    base.Tables.Add(new FinallyPriceCheck_ApplyHeadInfoDataTable(ds.Tables["FinallyPriceCheck_ApplyHeadInfo"]));
                }
                if ((ds.Tables["FinallyPriceCheck_ApplyBodyInfo"] != null)) {
                    base.Tables.Add(new FinallyPriceCheck_ApplyBodyInfoDataTable(ds.Tables["FinallyPriceCheck_ApplyBodyInfo"]));
                }
                if ((ds.Tables["FinallyPriceCheck_ApplyRecordInfo"] != null)) {
                    base.Tables.Add(new FinallyPriceCheck_ApplyRecordInfoDataTable(ds.Tables["FinallyPriceCheck_ApplyRecordInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FinallyPriceCheck_ApplyHeadInfoDataTable FinallyPriceCheck_ApplyHeadInfo {
            get {
                return this.tableFinallyPriceCheck_ApplyHeadInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FinallyPriceCheck_ApplyBodyInfoDataTable FinallyPriceCheck_ApplyBodyInfo {
            get {
                return this.tableFinallyPriceCheck_ApplyBodyInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FinallyPriceCheck_ApplyRecordInfoDataTable FinallyPriceCheck_ApplyRecordInfo {
            get {
                return this.tableFinallyPriceCheck_ApplyRecordInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            AssetPriceCheck_DataSet cln = ((AssetPriceCheck_DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FinallyPriceCheck_ApplyHeadInfo"] != null)) {
                    base.Tables.Add(new FinallyPriceCheck_ApplyHeadInfoDataTable(ds.Tables["FinallyPriceCheck_ApplyHeadInfo"]));
                }
                if ((ds.Tables["FinallyPriceCheck_ApplyBodyInfo"] != null)) {
                    base.Tables.Add(new FinallyPriceCheck_ApplyBodyInfoDataTable(ds.Tables["FinallyPriceCheck_ApplyBodyInfo"]));
                }
                if ((ds.Tables["FinallyPriceCheck_ApplyRecordInfo"] != null)) {
                    base.Tables.Add(new FinallyPriceCheck_ApplyRecordInfoDataTable(ds.Tables["FinallyPriceCheck_ApplyRecordInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFinallyPriceCheck_ApplyHeadInfo = ((FinallyPriceCheck_ApplyHeadInfoDataTable)(base.Tables["FinallyPriceCheck_ApplyHeadInfo"]));
            if ((initTable == true)) {
                if ((this.tableFinallyPriceCheck_ApplyHeadInfo != null)) {
                    this.tableFinallyPriceCheck_ApplyHeadInfo.InitVars();
                }
            }
            this.tableFinallyPriceCheck_ApplyBodyInfo = ((FinallyPriceCheck_ApplyBodyInfoDataTable)(base.Tables["FinallyPriceCheck_ApplyBodyInfo"]));
            if ((initTable == true)) {
                if ((this.tableFinallyPriceCheck_ApplyBodyInfo != null)) {
                    this.tableFinallyPriceCheck_ApplyBodyInfo.InitVars();
                }
            }
            this.tableFinallyPriceCheck_ApplyRecordInfo = ((FinallyPriceCheck_ApplyRecordInfoDataTable)(base.Tables["FinallyPriceCheck_ApplyRecordInfo"]));
            if ((initTable == true)) {
                if ((this.tableFinallyPriceCheck_ApplyRecordInfo != null)) {
                    this.tableFinallyPriceCheck_ApplyRecordInfo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "AssetPriceCheck_DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AssetPriceCheck_DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFinallyPriceCheck_ApplyHeadInfo = new FinallyPriceCheck_ApplyHeadInfoDataTable();
            base.Tables.Add(this.tableFinallyPriceCheck_ApplyHeadInfo);
            this.tableFinallyPriceCheck_ApplyBodyInfo = new FinallyPriceCheck_ApplyBodyInfoDataTable();
            base.Tables.Add(this.tableFinallyPriceCheck_ApplyBodyInfo);
            this.tableFinallyPriceCheck_ApplyRecordInfo = new FinallyPriceCheck_ApplyRecordInfoDataTable();
            base.Tables.Add(this.tableFinallyPriceCheck_ApplyRecordInfo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFinallyPriceCheck_ApplyHeadInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFinallyPriceCheck_ApplyBodyInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFinallyPriceCheck_ApplyRecordInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AssetPriceCheck_DataSet ds = new AssetPriceCheck_DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void FinallyPriceCheck_ApplyHeadInfoRowChangeEventHandler(object sender, FinallyPriceCheck_ApplyHeadInfoRowChangeEvent e);
        
        public delegate void FinallyPriceCheck_ApplyBodyInfoRowChangeEventHandler(object sender, FinallyPriceCheck_ApplyBodyInfoRowChangeEvent e);
        
        public delegate void FinallyPriceCheck_ApplyRecordInfoRowChangeEventHandler(object sender, FinallyPriceCheck_ApplyRecordInfoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FinallyPriceCheck_ApplyHeadInfoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnApplySheetHead_Pk;
            
            private global::System.Data.DataColumn columnApplySheetNo;
            
            private global::System.Data.DataColumn columnApplyTypeName;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnSheetRmbMoney;
            
            private global::System.Data.DataColumn columnApplyDate;
            
            private global::System.Data.DataColumn columnDeptName;
            
            private global::System.Data.DataColumn columnApplyPersonName;
            
            private global::System.Data.DataColumn columnBudgetType;
            
            private global::System.Data.DataColumn columnRequestDate;
            
            private global::System.Data.DataColumn columnBargainNo;
            
            private global::System.Data.DataColumn columnPayForArticle;
            
            private global::System.Data.DataColumn columnMakeDate;
            
            private global::System.Data.DataColumn columnDeliveryDate;
            
            private global::System.Data.DataColumn columnSubmitDate;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnCheckDept;
            
            private global::System.Data.DataColumn columnTradeAgreement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyHeadInfoDataTable() {
                this.TableName = "FinallyPriceCheck_ApplyHeadInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FinallyPriceCheck_ApplyHeadInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FinallyPriceCheck_ApplyHeadInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplySheetHead_PkColumn {
                get {
                    return this.columnApplySheetHead_Pk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplySheetNoColumn {
                get {
                    return this.columnApplySheetNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyTypeNameColumn {
                get {
                    return this.columnApplyTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SheetRmbMoneyColumn {
                get {
                    return this.columnSheetRmbMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyDateColumn {
                get {
                    return this.columnApplyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptNameColumn {
                get {
                    return this.columnDeptName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyPersonNameColumn {
                get {
                    return this.columnApplyPersonName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BudgetTypeColumn {
                get {
                    return this.columnBudgetType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestDateColumn {
                get {
                    return this.columnRequestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BargainNoColumn {
                get {
                    return this.columnBargainNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayForArticleColumn {
                get {
                    return this.columnPayForArticle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakeDateColumn {
                get {
                    return this.columnMakeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryDateColumn {
                get {
                    return this.columnDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubmitDateColumn {
                get {
                    return this.columnSubmitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckDeptColumn {
                get {
                    return this.columnCheckDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TradeAgreementColumn {
                get {
                    return this.columnTradeAgreement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyHeadInfoRow this[int index] {
                get {
                    return ((FinallyPriceCheck_ApplyHeadInfoRow)(this.Rows[index]));
                }
            }
            
            public event FinallyPriceCheck_ApplyHeadInfoRowChangeEventHandler FinallyPriceCheck_ApplyHeadInfoRowChanging;
            
            public event FinallyPriceCheck_ApplyHeadInfoRowChangeEventHandler FinallyPriceCheck_ApplyHeadInfoRowChanged;
            
            public event FinallyPriceCheck_ApplyHeadInfoRowChangeEventHandler FinallyPriceCheck_ApplyHeadInfoRowDeleting;
            
            public event FinallyPriceCheck_ApplyHeadInfoRowChangeEventHandler FinallyPriceCheck_ApplyHeadInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFinallyPriceCheck_ApplyHeadInfoRow(FinallyPriceCheck_ApplyHeadInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyHeadInfoRow AddFinallyPriceCheck_ApplyHeadInfoRow(
                        string ApplySheetHead_Pk, 
                        string ApplySheetNo, 
                        string ApplyTypeName, 
                        string ItemName, 
                        decimal SheetRmbMoney, 
                        System.DateTime ApplyDate, 
                        string DeptName, 
                        string ApplyPersonName, 
                        string BudgetType, 
                        System.DateTime RequestDate, 
                        string BargainNo, 
                        string PayForArticle, 
                        System.DateTime MakeDate, 
                        System.DateTime DeliveryDate, 
                        System.DateTime SubmitDate, 
                        string Remark, 
                        string CheckDept, 
                        string TradeAgreement) {
                FinallyPriceCheck_ApplyHeadInfoRow rowFinallyPriceCheck_ApplyHeadInfoRow = ((FinallyPriceCheck_ApplyHeadInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ApplySheetHead_Pk,
                        ApplySheetNo,
                        ApplyTypeName,
                        ItemName,
                        SheetRmbMoney,
                        ApplyDate,
                        DeptName,
                        ApplyPersonName,
                        BudgetType,
                        RequestDate,
                        BargainNo,
                        PayForArticle,
                        MakeDate,
                        DeliveryDate,
                        SubmitDate,
                        Remark,
                        CheckDept,
                        TradeAgreement};
                rowFinallyPriceCheck_ApplyHeadInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinallyPriceCheck_ApplyHeadInfoRow);
                return rowFinallyPriceCheck_ApplyHeadInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FinallyPriceCheck_ApplyHeadInfoDataTable cln = ((FinallyPriceCheck_ApplyHeadInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FinallyPriceCheck_ApplyHeadInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnApplySheetHead_Pk = base.Columns["ApplySheetHead_Pk"];
                this.columnApplySheetNo = base.Columns["ApplySheetNo"];
                this.columnApplyTypeName = base.Columns["ApplyTypeName"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnSheetRmbMoney = base.Columns["SheetRmbMoney"];
                this.columnApplyDate = base.Columns["ApplyDate"];
                this.columnDeptName = base.Columns["DeptName"];
                this.columnApplyPersonName = base.Columns["ApplyPersonName"];
                this.columnBudgetType = base.Columns["BudgetType"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnBargainNo = base.Columns["BargainNo"];
                this.columnPayForArticle = base.Columns["PayForArticle"];
                this.columnMakeDate = base.Columns["MakeDate"];
                this.columnDeliveryDate = base.Columns["DeliveryDate"];
                this.columnSubmitDate = base.Columns["SubmitDate"];
                this.columnRemark = base.Columns["Remark"];
                this.columnCheckDept = base.Columns["CheckDept"];
                this.columnTradeAgreement = base.Columns["TradeAgreement"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnApplySheetHead_Pk = new global::System.Data.DataColumn("ApplySheetHead_Pk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplySheetHead_Pk);
                this.columnApplySheetNo = new global::System.Data.DataColumn("ApplySheetNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplySheetNo);
                this.columnApplyTypeName = new global::System.Data.DataColumn("ApplyTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyTypeName);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnSheetRmbMoney = new global::System.Data.DataColumn("SheetRmbMoney", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSheetRmbMoney);
                this.columnApplyDate = new global::System.Data.DataColumn("ApplyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyDate);
                this.columnDeptName = new global::System.Data.DataColumn("DeptName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptName);
                this.columnApplyPersonName = new global::System.Data.DataColumn("ApplyPersonName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyPersonName);
                this.columnBudgetType = new global::System.Data.DataColumn("BudgetType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetType);
                this.columnRequestDate = new global::System.Data.DataColumn("RequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnBargainNo = new global::System.Data.DataColumn("BargainNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBargainNo);
                this.columnPayForArticle = new global::System.Data.DataColumn("PayForArticle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayForArticle);
                this.columnMakeDate = new global::System.Data.DataColumn("MakeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeDate);
                this.columnDeliveryDate = new global::System.Data.DataColumn("DeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDate);
                this.columnSubmitDate = new global::System.Data.DataColumn("SubmitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmitDate);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnCheckDept = new global::System.Data.DataColumn("CheckDept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckDept);
                this.columnTradeAgreement = new global::System.Data.DataColumn("TradeAgreement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeAgreement);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyHeadInfoRow NewFinallyPriceCheck_ApplyHeadInfoRow() {
                return ((FinallyPriceCheck_ApplyHeadInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FinallyPriceCheck_ApplyHeadInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FinallyPriceCheck_ApplyHeadInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FinallyPriceCheck_ApplyHeadInfoRowChanged != null)) {
                    this.FinallyPriceCheck_ApplyHeadInfoRowChanged(this, new FinallyPriceCheck_ApplyHeadInfoRowChangeEvent(((FinallyPriceCheck_ApplyHeadInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FinallyPriceCheck_ApplyHeadInfoRowChanging != null)) {
                    this.FinallyPriceCheck_ApplyHeadInfoRowChanging(this, new FinallyPriceCheck_ApplyHeadInfoRowChangeEvent(((FinallyPriceCheck_ApplyHeadInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FinallyPriceCheck_ApplyHeadInfoRowDeleted != null)) {
                    this.FinallyPriceCheck_ApplyHeadInfoRowDeleted(this, new FinallyPriceCheck_ApplyHeadInfoRowChangeEvent(((FinallyPriceCheck_ApplyHeadInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FinallyPriceCheck_ApplyHeadInfoRowDeleting != null)) {
                    this.FinallyPriceCheck_ApplyHeadInfoRowDeleting(this, new FinallyPriceCheck_ApplyHeadInfoRowChangeEvent(((FinallyPriceCheck_ApplyHeadInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFinallyPriceCheck_ApplyHeadInfoRow(FinallyPriceCheck_ApplyHeadInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AssetPriceCheck_DataSet ds = new AssetPriceCheck_DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FinallyPriceCheck_ApplyHeadInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FinallyPriceCheck_ApplyBodyInfoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnInventoryName;
            
            private global::System.Data.DataColumn columnInvType;
            
            private global::System.Data.DataColumn columnFinallyPrice;
            
            private global::System.Data.DataColumn columnFNumber;
            
            private global::System.Data.DataColumn columnFCheckMoney;
            
            private global::System.Data.DataColumn columnOriginalMoney;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnOffer;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columncurrTypeCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyBodyInfoDataTable() {
                this.TableName = "FinallyPriceCheck_ApplyBodyInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FinallyPriceCheck_ApplyBodyInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FinallyPriceCheck_ApplyBodyInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InventoryNameColumn {
                get {
                    return this.columnInventoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvTypeColumn {
                get {
                    return this.columnInvType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinallyPriceColumn {
                get {
                    return this.columnFinallyPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNumberColumn {
                get {
                    return this.columnFNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCheckMoneyColumn {
                get {
                    return this.columnFCheckMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginalMoneyColumn {
                get {
                    return this.columnOriginalMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfferColumn {
                get {
                    return this.columnOffer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn currTypeCodeColumn {
                get {
                    return this.columncurrTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyBodyInfoRow this[int index] {
                get {
                    return ((FinallyPriceCheck_ApplyBodyInfoRow)(this.Rows[index]));
                }
            }
            
            public event FinallyPriceCheck_ApplyBodyInfoRowChangeEventHandler FinallyPriceCheck_ApplyBodyInfoRowChanging;
            
            public event FinallyPriceCheck_ApplyBodyInfoRowChangeEventHandler FinallyPriceCheck_ApplyBodyInfoRowChanged;
            
            public event FinallyPriceCheck_ApplyBodyInfoRowChangeEventHandler FinallyPriceCheck_ApplyBodyInfoRowDeleting;
            
            public event FinallyPriceCheck_ApplyBodyInfoRowChangeEventHandler FinallyPriceCheck_ApplyBodyInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFinallyPriceCheck_ApplyBodyInfoRow(FinallyPriceCheck_ApplyBodyInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyBodyInfoRow AddFinallyPriceCheck_ApplyBodyInfoRow(string SubjectName, string InventoryName, string InvType, decimal FinallyPrice, int FNumber, decimal FCheckMoney, decimal OriginalMoney, string UnitName, string Offer, string Remark, decimal ExchangeRate, string currTypeCode) {
                FinallyPriceCheck_ApplyBodyInfoRow rowFinallyPriceCheck_ApplyBodyInfoRow = ((FinallyPriceCheck_ApplyBodyInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubjectName,
                        InventoryName,
                        InvType,
                        FinallyPrice,
                        FNumber,
                        FCheckMoney,
                        OriginalMoney,
                        UnitName,
                        Offer,
                        Remark,
                        ExchangeRate,
                        currTypeCode};
                rowFinallyPriceCheck_ApplyBodyInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinallyPriceCheck_ApplyBodyInfoRow);
                return rowFinallyPriceCheck_ApplyBodyInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FinallyPriceCheck_ApplyBodyInfoDataTable cln = ((FinallyPriceCheck_ApplyBodyInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FinallyPriceCheck_ApplyBodyInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnInventoryName = base.Columns["InventoryName"];
                this.columnInvType = base.Columns["InvType"];
                this.columnFinallyPrice = base.Columns["FinallyPrice"];
                this.columnFNumber = base.Columns["FNumber"];
                this.columnFCheckMoney = base.Columns["FCheckMoney"];
                this.columnOriginalMoney = base.Columns["OriginalMoney"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnOffer = base.Columns["Offer"];
                this.columnRemark = base.Columns["Remark"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columncurrTypeCode = base.Columns["currTypeCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnInventoryName = new global::System.Data.DataColumn("InventoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInventoryName);
                this.columnInvType = new global::System.Data.DataColumn("InvType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvType);
                this.columnFinallyPrice = new global::System.Data.DataColumn("FinallyPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinallyPrice);
                this.columnFNumber = new global::System.Data.DataColumn("FNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNumber);
                this.columnFCheckMoney = new global::System.Data.DataColumn("FCheckMoney", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCheckMoney);
                this.columnOriginalMoney = new global::System.Data.DataColumn("OriginalMoney", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalMoney);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnOffer = new global::System.Data.DataColumn("Offer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffer);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columncurrTypeCode = new global::System.Data.DataColumn("currTypeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrTypeCode);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyBodyInfoRow NewFinallyPriceCheck_ApplyBodyInfoRow() {
                return ((FinallyPriceCheck_ApplyBodyInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FinallyPriceCheck_ApplyBodyInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FinallyPriceCheck_ApplyBodyInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FinallyPriceCheck_ApplyBodyInfoRowChanged != null)) {
                    this.FinallyPriceCheck_ApplyBodyInfoRowChanged(this, new FinallyPriceCheck_ApplyBodyInfoRowChangeEvent(((FinallyPriceCheck_ApplyBodyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FinallyPriceCheck_ApplyBodyInfoRowChanging != null)) {
                    this.FinallyPriceCheck_ApplyBodyInfoRowChanging(this, new FinallyPriceCheck_ApplyBodyInfoRowChangeEvent(((FinallyPriceCheck_ApplyBodyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FinallyPriceCheck_ApplyBodyInfoRowDeleted != null)) {
                    this.FinallyPriceCheck_ApplyBodyInfoRowDeleted(this, new FinallyPriceCheck_ApplyBodyInfoRowChangeEvent(((FinallyPriceCheck_ApplyBodyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FinallyPriceCheck_ApplyBodyInfoRowDeleting != null)) {
                    this.FinallyPriceCheck_ApplyBodyInfoRowDeleting(this, new FinallyPriceCheck_ApplyBodyInfoRowChangeEvent(((FinallyPriceCheck_ApplyBodyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFinallyPriceCheck_ApplyBodyInfoRow(FinallyPriceCheck_ApplyBodyInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AssetPriceCheck_DataSet ds = new AssetPriceCheck_DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FinallyPriceCheck_ApplyBodyInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FinallyPriceCheck_ApplyRecordInfoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAssetCheckPriceHead_Pk;
            
            private global::System.Data.DataColumn columnIsCheckInCompany;
            
            private global::System.Data.DataColumn columnCheckRole;
            
            private global::System.Data.DataColumn columnCheckRoleName;
            
            private global::System.Data.DataColumn columnCheckPersonCode;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnCheckComment;
            
            private global::System.Data.DataColumn columnCheckSetp;
            
            private global::System.Data.DataColumn columnCheckdate;
            
            private global::System.Data.DataColumn columnIsPass;
            
            private global::System.Data.DataColumn columnIsAgree;
            
            private global::System.Data.DataColumn columnIsDisplays;
            
            private global::System.Data.DataColumn columnDisplaysPersonCode;
            
            private global::System.Data.DataColumn columndisplaysName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyRecordInfoDataTable() {
                this.TableName = "FinallyPriceCheck_ApplyRecordInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FinallyPriceCheck_ApplyRecordInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FinallyPriceCheck_ApplyRecordInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssetCheckPriceHead_PkColumn {
                get {
                    return this.columnAssetCheckPriceHead_Pk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsCheckInCompanyColumn {
                get {
                    return this.columnIsCheckInCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckRoleColumn {
                get {
                    return this.columnCheckRole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckRoleNameColumn {
                get {
                    return this.columnCheckRoleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckPersonCodeColumn {
                get {
                    return this.columnCheckPersonCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckCommentColumn {
                get {
                    return this.columnCheckComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckSetpColumn {
                get {
                    return this.columnCheckSetp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckdateColumn {
                get {
                    return this.columnCheckdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPassColumn {
                get {
                    return this.columnIsPass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsAgreeColumn {
                get {
                    return this.columnIsAgree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDisplaysColumn {
                get {
                    return this.columnIsDisplays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplaysPersonCodeColumn {
                get {
                    return this.columnDisplaysPersonCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn displaysNameColumn {
                get {
                    return this.columndisplaysName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyRecordInfoRow this[int index] {
                get {
                    return ((FinallyPriceCheck_ApplyRecordInfoRow)(this.Rows[index]));
                }
            }
            
            public event FinallyPriceCheck_ApplyRecordInfoRowChangeEventHandler FinallyPriceCheck_ApplyRecordInfoRowChanging;
            
            public event FinallyPriceCheck_ApplyRecordInfoRowChangeEventHandler FinallyPriceCheck_ApplyRecordInfoRowChanged;
            
            public event FinallyPriceCheck_ApplyRecordInfoRowChangeEventHandler FinallyPriceCheck_ApplyRecordInfoRowDeleting;
            
            public event FinallyPriceCheck_ApplyRecordInfoRowChangeEventHandler FinallyPriceCheck_ApplyRecordInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFinallyPriceCheck_ApplyRecordInfoRow(FinallyPriceCheck_ApplyRecordInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyRecordInfoRow AddFinallyPriceCheck_ApplyRecordInfoRow(int AssetCheckPriceHead_Pk, int IsCheckInCompany, string CheckRole, string CheckRoleName, string CheckPersonCode, string Name, string CheckComment, int CheckSetp, System.DateTime Checkdate, int IsPass, string IsAgree, int IsDisplays, string DisplaysPersonCode, string displaysName) {
                FinallyPriceCheck_ApplyRecordInfoRow rowFinallyPriceCheck_ApplyRecordInfoRow = ((FinallyPriceCheck_ApplyRecordInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AssetCheckPriceHead_Pk,
                        IsCheckInCompany,
                        CheckRole,
                        CheckRoleName,
                        CheckPersonCode,
                        Name,
                        CheckComment,
                        CheckSetp,
                        Checkdate,
                        IsPass,
                        IsAgree,
                        IsDisplays,
                        DisplaysPersonCode,
                        displaysName};
                rowFinallyPriceCheck_ApplyRecordInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinallyPriceCheck_ApplyRecordInfoRow);
                return rowFinallyPriceCheck_ApplyRecordInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FinallyPriceCheck_ApplyRecordInfoDataTable cln = ((FinallyPriceCheck_ApplyRecordInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FinallyPriceCheck_ApplyRecordInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssetCheckPriceHead_Pk = base.Columns["AssetCheckPriceHead_Pk"];
                this.columnIsCheckInCompany = base.Columns["IsCheckInCompany"];
                this.columnCheckRole = base.Columns["CheckRole"];
                this.columnCheckRoleName = base.Columns["CheckRoleName"];
                this.columnCheckPersonCode = base.Columns["CheckPersonCode"];
                this.columnName = base.Columns["Name"];
                this.columnCheckComment = base.Columns["CheckComment"];
                this.columnCheckSetp = base.Columns["CheckSetp"];
                this.columnCheckdate = base.Columns["Checkdate"];
                this.columnIsPass = base.Columns["IsPass"];
                this.columnIsAgree = base.Columns["IsAgree"];
                this.columnIsDisplays = base.Columns["IsDisplays"];
                this.columnDisplaysPersonCode = base.Columns["DisplaysPersonCode"];
                this.columndisplaysName = base.Columns["displaysName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssetCheckPriceHead_Pk = new global::System.Data.DataColumn("AssetCheckPriceHead_Pk", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetCheckPriceHead_Pk);
                this.columnIsCheckInCompany = new global::System.Data.DataColumn("IsCheckInCompany", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCheckInCompany);
                this.columnCheckRole = new global::System.Data.DataColumn("CheckRole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckRole);
                this.columnCheckRoleName = new global::System.Data.DataColumn("CheckRoleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckRoleName);
                this.columnCheckPersonCode = new global::System.Data.DataColumn("CheckPersonCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckPersonCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnCheckComment = new global::System.Data.DataColumn("CheckComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckComment);
                this.columnCheckSetp = new global::System.Data.DataColumn("CheckSetp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckSetp);
                this.columnCheckdate = new global::System.Data.DataColumn("Checkdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckdate);
                this.columnIsPass = new global::System.Data.DataColumn("IsPass", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPass);
                this.columnIsAgree = new global::System.Data.DataColumn("IsAgree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAgree);
                this.columnIsDisplays = new global::System.Data.DataColumn("IsDisplays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDisplays);
                this.columnDisplaysPersonCode = new global::System.Data.DataColumn("DisplaysPersonCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplaysPersonCode);
                this.columndisplaysName = new global::System.Data.DataColumn("displaysName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplaysName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyRecordInfoRow NewFinallyPriceCheck_ApplyRecordInfoRow() {
                return ((FinallyPriceCheck_ApplyRecordInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FinallyPriceCheck_ApplyRecordInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FinallyPriceCheck_ApplyRecordInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FinallyPriceCheck_ApplyRecordInfoRowChanged != null)) {
                    this.FinallyPriceCheck_ApplyRecordInfoRowChanged(this, new FinallyPriceCheck_ApplyRecordInfoRowChangeEvent(((FinallyPriceCheck_ApplyRecordInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FinallyPriceCheck_ApplyRecordInfoRowChanging != null)) {
                    this.FinallyPriceCheck_ApplyRecordInfoRowChanging(this, new FinallyPriceCheck_ApplyRecordInfoRowChangeEvent(((FinallyPriceCheck_ApplyRecordInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FinallyPriceCheck_ApplyRecordInfoRowDeleted != null)) {
                    this.FinallyPriceCheck_ApplyRecordInfoRowDeleted(this, new FinallyPriceCheck_ApplyRecordInfoRowChangeEvent(((FinallyPriceCheck_ApplyRecordInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FinallyPriceCheck_ApplyRecordInfoRowDeleting != null)) {
                    this.FinallyPriceCheck_ApplyRecordInfoRowDeleting(this, new FinallyPriceCheck_ApplyRecordInfoRowChangeEvent(((FinallyPriceCheck_ApplyRecordInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFinallyPriceCheck_ApplyRecordInfoRow(FinallyPriceCheck_ApplyRecordInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AssetPriceCheck_DataSet ds = new AssetPriceCheck_DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FinallyPriceCheck_ApplyRecordInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FinallyPriceCheck_ApplyHeadInfoRow : global::System.Data.DataRow {
            
            private FinallyPriceCheck_ApplyHeadInfoDataTable tableFinallyPriceCheck_ApplyHeadInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FinallyPriceCheck_ApplyHeadInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinallyPriceCheck_ApplyHeadInfo = ((FinallyPriceCheck_ApplyHeadInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplySheetHead_Pk {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplySheetHead_PkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“ApplySheetHead_Pk”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplySheetHead_PkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplySheetNo {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplySheetNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“ApplySheetNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplySheetNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplyTypeName {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“ApplyTypeName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“ItemName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SheetRmbMoney {
                get {
                    try {
                        return ((decimal)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.SheetRmbMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“SheetRmbMoney”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.SheetRmbMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ApplyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“ApplyDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeptName {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.DeptNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“DeptName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.DeptNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplyPersonName {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyPersonNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“ApplyPersonName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyPersonNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BudgetType {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.BudgetTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“BudgetType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.BudgetTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RequestDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.RequestDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“RequestDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.RequestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BargainNo {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.BargainNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“BargainNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.BargainNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayForArticle {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.PayForArticleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“PayForArticle”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.PayForArticleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MakeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.MakeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“MakeDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.MakeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliveryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.DeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“DeliveryDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.DeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SubmitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.SubmitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“SubmitDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.SubmitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CheckDept {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.CheckDeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“CheckDept”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.CheckDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TradeAgreement {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyHeadInfo.TradeAgreementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyHeadInfo”中列“TradeAgreement”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyHeadInfo.TradeAgreementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplySheetHead_PkNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.ApplySheetHead_PkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplySheetHead_PkNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplySheetHead_PkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplySheetNoNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.ApplySheetNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplySheetNoNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplySheetNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyTypeNameNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyTypeNameNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSheetRmbMoneyNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.SheetRmbMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSheetRmbMoneyNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.SheetRmbMoneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyDateNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyDateNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptNameNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.DeptNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptNameNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.DeptNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyPersonNameNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyPersonNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyPersonNameNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.ApplyPersonNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBudgetTypeNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.BudgetTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBudgetTypeNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.BudgetTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestDateNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.RequestDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestDateNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.RequestDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBargainNoNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.BargainNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBargainNoNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.BargainNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayForArticleNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.PayForArticleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayForArticleNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.PayForArticleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakeDateNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.MakeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakeDateNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.MakeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryDateNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.DeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryDateNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.DeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubmitDateNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.SubmitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubmitDateNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.SubmitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckDeptNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.CheckDeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckDeptNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.CheckDeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTradeAgreementNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyHeadInfo.TradeAgreementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTradeAgreementNull() {
                this[this.tableFinallyPriceCheck_ApplyHeadInfo.TradeAgreementColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FinallyPriceCheck_ApplyBodyInfoRow : global::System.Data.DataRow {
            
            private FinallyPriceCheck_ApplyBodyInfoDataTable tableFinallyPriceCheck_ApplyBodyInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FinallyPriceCheck_ApplyBodyInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinallyPriceCheck_ApplyBodyInfo = ((FinallyPriceCheck_ApplyBodyInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“SubjectName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InventoryName {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.InventoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“InventoryName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.InventoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvType {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.InvTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“InvType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.InvTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FinallyPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.FinallyPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“FinallyPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.FinallyPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FNumber {
                get {
                    try {
                        return ((int)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.FNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“FNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.FNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FCheckMoney {
                get {
                    try {
                        return ((decimal)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.FCheckMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“FCheckMoney”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.FCheckMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OriginalMoney {
                get {
                    try {
                        return ((decimal)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.OriginalMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“OriginalMoney”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.OriginalMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“UnitName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Offer {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.OfferColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“Offer”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.OfferColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExchangeRate {
                get {
                    try {
                        return ((decimal)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“ExchangeRate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string currTypeCode {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyBodyInfo.currTypeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyBodyInfo”中列“currTypeCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyBodyInfo.currTypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNameNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInventoryNameNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.InventoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInventoryNameNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.InventoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvTypeNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.InvTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvTypeNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.InvTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinallyPriceNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.FinallyPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinallyPriceNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.FinallyPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNumberNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.FNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNumberNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.FNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCheckMoneyNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.FCheckMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCheckMoneyNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.FCheckMoneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginalMoneyNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.OriginalMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginalMoneyNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.OriginalMoneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNameNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfferNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.OfferColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfferNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.OfferColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExchangeRateNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscurrTypeCodeNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyBodyInfo.currTypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcurrTypeCodeNull() {
                this[this.tableFinallyPriceCheck_ApplyBodyInfo.currTypeCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FinallyPriceCheck_ApplyRecordInfoRow : global::System.Data.DataRow {
            
            private FinallyPriceCheck_ApplyRecordInfoDataTable tableFinallyPriceCheck_ApplyRecordInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FinallyPriceCheck_ApplyRecordInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinallyPriceCheck_ApplyRecordInfo = ((FinallyPriceCheck_ApplyRecordInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssetCheckPriceHead_Pk {
                get {
                    try {
                        return ((int)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.AssetCheckPriceHead_PkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“AssetCheckPriceHead_Pk”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.AssetCheckPriceHead_PkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsCheckInCompany {
                get {
                    try {
                        return ((int)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsCheckInCompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“IsCheckInCompany”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsCheckInCompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CheckRole {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckRoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“CheckRole”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckRoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CheckRoleName {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckRoleNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“CheckRoleName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckRoleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CheckPersonCode {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckPersonCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“CheckPersonCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckPersonCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CheckComment {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“CheckComment”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CheckSetp {
                get {
                    try {
                        return ((int)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckSetpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“CheckSetp”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckSetpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Checkdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“Checkdate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsPass {
                get {
                    try {
                        return ((int)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsPassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“IsPass”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsPassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsAgree {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsAgreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“IsAgree”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsAgreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsDisplays {
                get {
                    try {
                        return ((int)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsDisplaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“IsDisplays”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsDisplaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DisplaysPersonCode {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.DisplaysPersonCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“DisplaysPersonCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.DisplaysPersonCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string displaysName {
                get {
                    try {
                        return ((string)(this[this.tableFinallyPriceCheck_ApplyRecordInfo.displaysNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“FinallyPriceCheck_ApplyRecordInfo”中列“displaysName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFinallyPriceCheck_ApplyRecordInfo.displaysNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssetCheckPriceHead_PkNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.AssetCheckPriceHead_PkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssetCheckPriceHead_PkNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.AssetCheckPriceHead_PkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsCheckInCompanyNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.IsCheckInCompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsCheckInCompanyNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsCheckInCompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckRoleNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.CheckRoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckRoleNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckRoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckRoleNameNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.CheckRoleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckRoleNameNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckRoleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckPersonCodeNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.CheckPersonCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckPersonCodeNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckPersonCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckCommentNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.CheckCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckCommentNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckSetpNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.CheckSetpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckSetpNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckSetpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckdateNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.CheckdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckdateNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.CheckdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPassNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.IsPassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPassNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsPassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsAgreeNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.IsAgreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsAgreeNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsAgreeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDisplaysNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.IsDisplaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDisplaysNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.IsDisplaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplaysPersonCodeNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.DisplaysPersonCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplaysPersonCodeNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.DisplaysPersonCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdisplaysNameNull() {
                return this.IsNull(this.tableFinallyPriceCheck_ApplyRecordInfo.displaysNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdisplaysNameNull() {
                this[this.tableFinallyPriceCheck_ApplyRecordInfo.displaysNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FinallyPriceCheck_ApplyHeadInfoRowChangeEvent : global::System.EventArgs {
            
            private FinallyPriceCheck_ApplyHeadInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyHeadInfoRowChangeEvent(FinallyPriceCheck_ApplyHeadInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyHeadInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FinallyPriceCheck_ApplyBodyInfoRowChangeEvent : global::System.EventArgs {
            
            private FinallyPriceCheck_ApplyBodyInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyBodyInfoRowChangeEvent(FinallyPriceCheck_ApplyBodyInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyBodyInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FinallyPriceCheck_ApplyRecordInfoRowChangeEvent : global::System.EventArgs {
            
            private FinallyPriceCheck_ApplyRecordInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyRecordInfoRowChangeEvent(FinallyPriceCheck_ApplyRecordInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FinallyPriceCheck_ApplyRecordInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591