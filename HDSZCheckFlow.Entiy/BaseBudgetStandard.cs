// 
// Generated by ActiveRecord Generator
// 
//
namespace HDSZCheckFlow.Entiy
{
    using Castle.ActiveRecord;
	using Castle.ActiveRecord.Queries ;
    
    
    [ActiveRecord("Base_BudgetStandard")]
    public class BaseBudgetStandard : ActiveRecordBase
    {
        
        private int _id;
        
        private System.DateTime _beginDate;
        
        private System.DateTime _endDate;
        
        private string _budgetStandard;
        
        private string _budgetStandardName;
        
        [PrimaryKey(PrimaryKeyType.Native)]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        [Property()]
        public System.DateTime BeginDate
        {
            get
            {
                return this._beginDate;
            }
            set
            {
                this._beginDate = value;
            }
        }
        
        [Property()]
        public System.DateTime EndDate
        {
            get
            {
                return this._endDate;
            }
            set
            {
                this._endDate = value;
            }
        }
        
        [Property()]
        public string BudgetStandard
        {
            get
            {
                return this._budgetStandard;
            }
            set
            {
                this._budgetStandard = value;
            }
        }
        
        [Property()]
        public string BudgetStandardName
        {
            get
            {
                return this._budgetStandardName;
            }
            set
            {
                this._budgetStandardName = value;
            }
        }
        
        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(BaseBudgetStandard));
        }
        
        public static BaseBudgetStandard[] FindAll()
        {
            return ((BaseBudgetStandard[])(ActiveRecordBase.FindAll(typeof(BaseBudgetStandard))));
        }
        
        public static BaseBudgetStandard Find(int Id)
        {
            return ((BaseBudgetStandard)(ActiveRecordBase.FindByPrimaryKey(typeof(BaseBudgetStandard), Id,false)));
        }

		public static BaseBudgetStandard FindByDateTime(System.DateTime  dt )
		{
			SimpleQuery query=new SimpleQuery(typeof(BaseBudgetStandard),@"from BaseBudgetStandard o where o.BeginDate <= ? and o.EndDate > ?  ",dt,dt);
			BaseBudgetStandard[] baseBudgetStandards=(BaseBudgetStandard[])ExecuteQuery(query);
			if(baseBudgetStandards!=null && baseBudgetStandards.Length>0)
			{
				return baseBudgetStandards[0];
			}
			else
			{
				return null;
			}
		}
    }
}
