// 
// Generated by ActiveRecord Generator
// 
//
namespace HDSZCheckFlow.Entiy
{
    using Castle.ActiveRecord;
    
    
    [ActiveRecord("ApplyType")]
    public class ApplyType : ActiveRecordBase
    {
        
        private string _applyTypeCode;
        
        private string _applyTypeName;
        
        private string _applyTypeClass;
        
        private string _applySheetBodyTableName;
        
        private string _applySheetEncode;
        
        private int _isStop;

		private int _isValid;

		private string _report;

		private string _reportForPurshase;

        
        [PrimaryKey(PrimaryKeyType.Native)]
        public string ApplyTypeCode
        {
            get
            {
                return this._applyTypeCode;
            }
            set
            {
                this._applyTypeCode = value;
            }
        }
        
        [Property()]
        public string ApplyTypeName
        {
            get
            {
                return this._applyTypeName;
            }
            set
            {
                this._applyTypeName = value;
            }
        }
        
        [Property()]
        public string ApplyTypeClass
        {
            get
            {
                return this._applyTypeClass;
            }
            set
            {
                this._applyTypeClass = value;
            }
        }
        
        [Property(Column="ApplySheetBody_TableName")]
        public string ApplySheetBodyTableName
        {
            get
            {
                return this._applySheetBodyTableName;
            }
            set
            {
                this._applySheetBodyTableName = value;
            }
        }
        
        [Property(Column="ApplySheet_Encode")]
        public string ApplySheetEncode
        {
            get
            {
                return this._applySheetEncode;
            }
            set
            {
                this._applySheetEncode = value;
            }
        }
        
        [Property()]
        public int IsStop
        {
            get
            {
                return this._isStop;
            }
            set
            {
                this._isStop = value;
            }
        }

		[Property()]
		public int IsValid
		{
			get
			{
				return this._isValid;
			}
			set
			{
				this._isValid = value;
			}
		}

		[Property()]
		public string Report
		{
			get
			{
				return this._report;
			}
			set
			{
				this._report = value;
			}
		}

		[Property()]
		public string ReportForPurshase
		{
			get
			{
				return this._reportForPurshase;
			}
			set
			{
				this._reportForPurshase = value;
			}
		}
        
        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(ApplyType));
        }
        
        public static ApplyType[] FindAll()
        {
            return ((ApplyType[])(ActiveRecordBase.FindAll(typeof(ApplyType))));
        }
        
        public static ApplyType Find(string ApplyTypeCode)
        {
            return ((ApplyType)(ActiveRecordBase.FindByPrimaryKey(typeof(ApplyType), ApplyTypeCode,false)));
        }
    }
}
