// 
// Generated by ActiveRecord Generator
// 
//
namespace HDSZCheckFlow.Entiy
{
    using Castle.ActiveRecord;
	using Castle.ActiveRecord.Queries;
    
    
    [ActiveRecord("ApplySheetHead_Budget")]
    public class ApplySheetHeadBudget : ActiveRecordBase
    {
        
        private int _applySheetHeadBudgetPk;
        
        private int _applySheetHeadPk;

		private string _sheetFirstClassSubject;
        
        private string _sheetSubject;
        
        private System.Decimal _sheetMoney;
        
        private int _submitType;
        
        private System.Decimal _sumCheckMoney;

		private System.Decimal _allowOutMoney;
        
        [PrimaryKey(PrimaryKeyType.Native, "ApplySheetHead_Budget_pk")]
        public int ApplySheetHeadBudgetPk
        {
            get
            {
                return this._applySheetHeadBudgetPk;
            }
            set
            {
                this._applySheetHeadBudgetPk = value;
            }
        }
        
        [Property(Column="ApplySheetHead_Pk")]
        public int ApplySheetHeadPk
        {
            get
            {
                return this._applySheetHeadPk;
            }
            set
            {
                this._applySheetHeadPk = value;
            }
        }

		    
		[Property()]
		public string SheetFirstClassSubject
		{
			get
			{
				return this._sheetFirstClassSubject;
			}
			set
			{
				this._sheetFirstClassSubject = value;
			}
		}

        
        [Property()]
        public string SheetSubject
        {
            get
            {
                return this._sheetSubject;
            }
            set
            {
                this._sheetSubject = value;
            }
        }
        
        [Property()]
        public System.Decimal SheetMoney
        {
            get
            {
                return this._sheetMoney;
            }
            set
            {
                this._sheetMoney = value;
            }
        }
        
        [Property()]
        public int SubmitType
        {
            get
            {
                return this._submitType;
            }
            set
            {
                this._submitType = value;
            }
        }
        
        [Property()]
        public System.Decimal SumCheckMoney
        {
            get
            {
                return this._sumCheckMoney;
            }
            set
            {
                this._sumCheckMoney = value;
            }
        }

		[Property()]
		public System.Decimal AllowOutMoney
		{
			get
			{
				return this._allowOutMoney;
			}
			set
			{
				this._allowOutMoney = value;
			}
		}
        
        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(ApplySheetHeadBudget));
        }
        
        public static ApplySheetHeadBudget[] FindAll()
        {
            return ((ApplySheetHeadBudget[])(ActiveRecordBase.FindAll(typeof(ApplySheetHeadBudget))));
        }
        
        public static ApplySheetHeadBudget Find(int ApplySheetHeadBudgetPk)
        {
            return ((ApplySheetHeadBudget)(ActiveRecordBase.FindByPrimaryKey(typeof(ApplySheetHeadBudget), ApplySheetHeadBudgetPk,false)));
        }

		public static ApplySheetHeadBudget FindBySheetHeadPK(int SheetHeadPK)
		{
			SimpleQuery query=new SimpleQuery(typeof(ApplySheetHeadBudget),@"from ApplySheetHeadBudget o where o.ApplySheetHeadPk=?",SheetHeadPK);
			ApplySheetHeadBudget[] applySheetHeadBudgets=(ApplySheetHeadBudget[])ExecuteQuery(query);
			if(applySheetHeadBudgets!=null && applySheetHeadBudgets.Length>0)
			{
				return applySheetHeadBudgets[0];
			}
			else
			{
				return null;
			}
		}
    }
}
