// 
// Generated by ActiveRecord Generator
// 
//
namespace HDSZCheckFlow.Entiy
{
    using Castle.ActiveRecord;
	using Castle.ActiveRecord.Queries;   
    
    
    [ActiveRecord("ApplySheetBody_Pay")]
    public class ApplySheetBodyPay : ActiveRecordBase
    {
        
        private int _applySheetBodyPayPk;
        
        private int _applySheetHeadPk;
        
        private string _item;
        
        private System.Decimal _money;

		private System.Decimal _originalcurrPrice;//ExchangeRate

		private System.Decimal _exchangeRate;
        
        [PrimaryKey(PrimaryKeyType.Native, "ApplySheetBody_Pay_pk")]
        public int ApplySheetBodyPayPk
        {
            get
            {
                return this._applySheetBodyPayPk;
            }
            set
            {
                this._applySheetBodyPayPk = value;
            }
        }
        
        [Property(Column="ApplySheetHead_Pk")]
        public int ApplySheetHeadPk
        {
            get
            {
                return this._applySheetHeadPk;
            }
            set
            {
                this._applySheetHeadPk = value;
            }
        }
        
        [Property()]
        public string Item
        {
            get
            {
                return this._item;
            }
            set
            {
                this._item = value;
            }
        }
        
        [Property()]
        public System.Decimal Money
        {
            get
            {
                return this._money;
            }
            set
            {
                this._money = value;
            }
        }

		[Property()]
		public System.Decimal OriginalcurrPrice
		{
			get
			{
				return this._originalcurrPrice;
			}
			set
			{
				this._originalcurrPrice = value;
			}
		}

		[Property()]
		public System.Decimal ExchangeRate
		{
			get
			{
				return this._exchangeRate;
			}
			set
			{
				this._exchangeRate = value;
			}
		}
		
        
        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(ApplySheetBodyPay));
        }
        
        public static ApplySheetBodyPay[] FindAll()
        {
            return ((ApplySheetBodyPay[])(ActiveRecordBase.FindAll(typeof(ApplySheetBodyPay))));
        }
        
        public static ApplySheetBodyPay Find(int ApplySheetBodyPayPk)
        {
            return ((ApplySheetBodyPay)(ActiveRecordBase.FindByPrimaryKey(typeof(ApplySheetBodyPay), ApplySheetBodyPayPk,false)));
        }

		public static ApplySheetBodyPay[] FindByApplyHeadPk(int ApplyHeadPk)
		{
			SimpleQuery query=new SimpleQuery(typeof(ApplySheetBodyPay),@"from ApplySheetBodyPay o where  o.ApplySheetHeadPk=?",ApplyHeadPk);
			return (ApplySheetBodyPay[])ExecuteQuery(query);
		}
    }
}
