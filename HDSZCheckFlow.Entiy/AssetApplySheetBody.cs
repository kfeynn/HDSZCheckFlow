// 
// Generated by ActiveRecord Generator
// 
//
namespace HDSZCheckFlow.Entiy
{
    using Castle.ActiveRecord;
	using Castle.ActiveRecord.Queries;  
    
    
    [ActiveRecord("Asset_ApplySheet_Body")]
    public class AssetApplySheetBody : ActiveRecordBase
    {
        
        private int _iD;
        
        private int _applySheetHeadPk;
        
        private string _subjectName;
        
        private string _inventoryName;
        
        private string _invType;
        
        private int _baseUnitId;
        
        private int _number;
        
        private System.Decimal _originalcurrPrice;
        
        private System.Decimal _originalMoney;
        
        private string _currTypeCode;
        
        private System.Decimal _exchangeRate;

		private int _checkNumber;
        
        private System.Decimal _rmbPrice;
        
        private System.Decimal _rmbMoney;
        
        private int _isChecked;
        
        private int _isGiveup;
        
        private string _giveupSigner;
        
        private string _giveupDatetime;

        
        [PrimaryKey(PrimaryKeyType.Native)]
        public int ID
        {
            get
            {
                return this._iD;
            }
            set
            {
                this._iD = value;
            }
        }
        
        [Property(Column="ApplySheetHead_Pk")]
        public int ApplySheetHeadPk
        {
            get
            {
                return this._applySheetHeadPk;
            }
            set
            {
                this._applySheetHeadPk = value;
            }
        }
        
        [Property()]
        public string SubjectName
        {
            get
            {
                return this._subjectName;
            }
            set
            {
                this._subjectName = value;
            }
        }
        
        [Property()]
        public string InventoryName
        {
            get
            {
                return this._inventoryName;
            }
            set
            {
                this._inventoryName = value;
            }
        }
        
        [Property()]
        public string InvType
        {
            get
            {
                return this._invType;
            }
            set
            {
                this._invType = value;
            }
        }
        
        [Property(Column="Base_Unit_id")]
        public int BaseUnitId
        {
            get
            {
                return this._baseUnitId;
            }
            set
            {
                this._baseUnitId = value;
            }
        }
        
        [Property()]
        public int Number
        {
            get
            {
                return this._number;
            }
            set
            {
                this._number = value;
            }
        }

		[Property()]
		public int CheckNumber
		{
			get
			{
				return this._checkNumber;
			}
			set
			{
				this._checkNumber = value;
			}
		}

        
        [Property()]
        public System.Decimal OriginalcurrPrice
        {
            get
            {
                return this._originalcurrPrice;
            }
            set
            {
                this._originalcurrPrice = value;
            }
        }
        
        [Property()]
        public System.Decimal OriginalMoney
        {
            get
            {
                return this._originalMoney;
            }
            set
            {
                this._originalMoney = value;
            }
        }
        
        [Property()]
        public string CurrTypeCode
        {
            get
            {
                return this._currTypeCode;
            }
            set
            {
                this._currTypeCode = value;
            }
        }
        
        [Property()]
        public System.Decimal ExchangeRate
        {
            get
            {
                return this._exchangeRate;
            }
            set
            {
                this._exchangeRate = value;
            }
        }
        
        [Property()]
        public System.Decimal RmbPrice
        {
            get
            {
                return this._rmbPrice;
            }
            set
            {
                this._rmbPrice = value;
            }
        }
        
        [Property()]
        public System.Decimal RmbMoney
        {
            get
            {
                return this._rmbMoney;
            }
            set
            {
                this._rmbMoney = value;
            }
        }
        
        [Property()]
        public int IsChecked
        {
            get
            {
                return this._isChecked;
            }
            set
            {
                this._isChecked = value;
            }
        }
        
        [Property()]
        public int IsGiveup
        {
            get
            {
                return this._isGiveup;
            }
            set
            {
                this._isGiveup = value;
            }
        }
        
        [Property()]
        public string GiveupSigner
        {
            get
            {
                return this._giveupSigner;
            }
            set
            {
                this._giveupSigner = value;
            }
        }
        
        [Property()]
        public string GiveupDatetime
        {
            get
            {
                return this._giveupDatetime;
            }
            set
            {
                this._giveupDatetime = value;
            }
        }
        

        
        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(AssetApplySheetBody));
        }
        
        public static AssetApplySheetBody[] FindAll()
        {
            return ((AssetApplySheetBody[])(ActiveRecordBase.FindAll(typeof(AssetApplySheetBody))));
        }
        
        public static AssetApplySheetBody Find(int ID)
        {
            return ((AssetApplySheetBody)(ActiveRecordBase.FindByPrimaryKey(typeof(AssetApplySheetBody), ID,false)));
        }

		public static AssetApplySheetBody[] FindByApplyHeadPk(int ApplyHeadPk)
		{
			SimpleQuery query=new SimpleQuery(typeof(AssetApplySheetBody),@"from AssetApplySheetBody o where  o.ApplySheetHeadPk=?",ApplyHeadPk);
			return (AssetApplySheetBody[])ExecuteQuery(query);
		}
    }
}
