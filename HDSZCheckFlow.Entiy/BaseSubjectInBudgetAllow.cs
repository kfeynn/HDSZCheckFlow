// 
// Generated by ActiveRecord Generator
// 
//
namespace HDSZCheckFlow.Entiy
{
    using Castle.ActiveRecord;
	using Castle.ActiveRecord.Queries;
    
    
    [ActiveRecord("Base_SubjectInBudgetAllow")]
    public class BaseSubjectInBudgetAllow : ActiveRecordBase
    {
        
        private int _id;
        
        private string _budgetSubject;
        
        private string _budgetSubjectName;
        
        private string _accountSubject;
        
        [PrimaryKey(PrimaryKeyType.Native)]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        [Property()]
        public string BudgetSubject
        {
            get
            {
                return this._budgetSubject;
            }
            set
            {
                this._budgetSubject = value;
            }
        }
        
        [Property()]
        public string BudgetSubjectName
        {
            get
            {
                return this._budgetSubjectName;
            }
            set
            {
                this._budgetSubjectName = value;
            }
        }
        
        [Property()]
        public string AccountSubject
        {
            get
            {
                return this._accountSubject;
            }
            set
            {
                this._accountSubject = value;
            }
        }
        
        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(BaseSubjectInBudgetAllow));
        }
        
        public static BaseSubjectInBudgetAllow[] FindAll()
        {
            return ((BaseSubjectInBudgetAllow[])(ActiveRecordBase.FindAll(typeof(BaseSubjectInBudgetAllow))));
        }
        
        public static BaseSubjectInBudgetAllow Find(int Id)
        {
            return ((BaseSubjectInBudgetAllow)(ActiveRecordBase.FindByPrimaryKey(typeof(BaseSubjectInBudgetAllow), Id,false)));
        }

		public static int FindCountByBudgetSubject(string BudgetSubject)
		{
			ScalarQuery  query=new ScalarQuery (typeof(BaseSubjectInBudgetAllow),@"select count(*) from BaseSubjectInBudgetAllow o where o.BudgetSubject = ? ",BudgetSubject);
			int  nums=(int)ExecuteQuery(query);
			return nums ; 
		}

		public static int FindCountByBudgetSubjectAndAccount(string BudgetSubject,string AccountSubject)
		{
			ScalarQuery  query=new ScalarQuery (typeof(BaseSubjectInBudgetAllow),@"select count(*) from BaseSubjectInBudgetAllow o where o.BudgetSubject = ? and o.AccountSubject = ?  ",BudgetSubject,AccountSubject);
			int  nums=(int)ExecuteQuery(query);
			return nums ; 
		}

		public static BaseSubjectInBudgetAllow FindByBudgetAndAccountSubject(string BudgetSubject,string AccountSubject)
		{
			SimpleQuery query=new SimpleQuery(typeof(BaseSubjectInBudgetAllow),@"from BaseSubjectInBudgetAllow o where o.BudgetSubject = ? and o.AccountSubject = ?  ",BudgetSubject,AccountSubject);
			BaseSubjectInBudgetAllow[] baseBudgetStandards=(BaseSubjectInBudgetAllow[])ExecuteQuery(query);
			if(baseBudgetStandards!=null && baseBudgetStandards.Length>0)
			{
				return baseBudgetStandards[0];
			}
			else
			{
				return null;
			}
		}
    }
}
