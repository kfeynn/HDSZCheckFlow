// 
// Generated by ActiveRecord Generator
// 
//
namespace HDSZCheckFlow.Entiy
{
    using Castle.ActiveRecord;
	using Castle.ActiveRecord.Queries;
    
    
    [ActiveRecord("Base_Runreport")]
    public class BaseRunreport : ActiveRecordBase
    {
        
        private int _iD;
        
        private string _tableCode;
        
        private string _tableName;
        
        private string _budgetDept;
        
        private string _firstClassAccount;
        
        private string _type;
        
        private string _classType;
        
        [PrimaryKey(PrimaryKeyType.Native)]
        public int ID
        {
            get
            {
                return this._iD;
            }
            set
            {
                this._iD = value;
            }
        }
        
        [Property()]
        public string TableCode
        {
            get
            {
                return this._tableCode;
            }
            set
            {
                this._tableCode = value;
            }
        }
        
        [Property()]
        public string TableName
        {
            get
            {
                return this._tableName;
            }
            set
            {
                this._tableName = value;
            }
        }
        
        [Property()]
        public string BudgetDept
        {
            get
            {
                return this._budgetDept;
            }
            set
            {
                this._budgetDept = value;
            }
        }
        
        [Property()]
        public string FirstClassAccount
        {
            get
            {
                return this._firstClassAccount;
            }
            set
            {
                this._firstClassAccount = value;
            }
        }
        
        [Property()]
        public string Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        [Property()]
        public string ClassType
        {
            get
            {
                return this._classType;
            }
            set
            {
                this._classType = value;
            }
        }
        
        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(BaseRunreport));
        }
        
        public static BaseRunreport[] FindAll()
        {
            return ((BaseRunreport[])(ActiveRecordBase.FindAll(typeof(BaseRunreport))));
        }
        
        public static BaseRunreport Find(int ID)
        {
            return ((BaseRunreport)(ActiveRecordBase.FindByPrimaryKey(typeof(BaseRunreport), ID,false)));
        }

		public static BaseRunreport FindBytableCode(string tableCode)
		{
			SimpleQuery query=new SimpleQuery(typeof(BaseRunreport),@"from BaseRunreport o where o.TableCode= ?  ",tableCode);
			BaseRunreport []baseRunreport = (BaseRunreport[])ExecuteQuery(query); 
			if(baseRunreport!=null && baseRunreport.Length>0)
			{
				return baseRunreport[0];
			}
			else
			{
				return null;
			}
		}
    }
}
