// 
// Generated by ActiveRecord Generator
// 
//
namespace HDSZCheckFlow.Entiy
{
    using Castle.ActiveRecord;
	using Castle.ActiveRecord.Queries;
    
    
    [ActiveRecord("applySheetCheckRecord")]
    public class ApplySheetCheckRecord : ActiveRecordBase
    {
        
        private int _applySheetCheckRecordPk;
        
        private int _applySheetHeadPk;

		private int _assetCheckPriceHeadPk;
        
        private int _isCheckInCompany;
        
        private string _checkRole;
        
        private string _checkPersonCode;
        
        private int _isPass;
        
        private System.DateTime _checkdate;
        
        private string _checkComment;
        
        private int _isDisplays;
        
        private string _displaysPersonCode;
        
        private int _checkSetp;
        
        [PrimaryKey(PrimaryKeyType.Native, "applySheetCheckRecord_pk")]
        public int ApplySheetCheckRecordPk
        {
            get
            {
                return this._applySheetCheckRecordPk;
            }
            set
            {
                this._applySheetCheckRecordPk = value;
            }
        }
        
        [Property(Column="ApplySheetHead_Pk")]
        public int ApplySheetHeadPk
        {
            get
            {
                return this._applySheetHeadPk;
            }
            set
            {
                this._applySheetHeadPk = value;
            }
        }

		[Property(Column="AssetCheckPriceHead_Pk")]
		public int AssetCheckPriceHeadPk
		{
			get
			{
				return this._assetCheckPriceHeadPk;
			}
			set
			{
				this._assetCheckPriceHeadPk = value;
			}
		}
        
        [Property()]
        public int IsCheckInCompany
        {
            get
            {
                return this._isCheckInCompany;
            }
            set
            {
                this._isCheckInCompany = value;
            }
        }
        
        [Property()]
        public string CheckRole
        {
            get
            {
                return this._checkRole;
            }
            set
            {
                this._checkRole = value;
            }
        }
        
        [Property()]
        public string CheckPersonCode
        {
            get
            {
                return this._checkPersonCode;
            }
            set
            {
                this._checkPersonCode = value;
            }
        }
        
        [Property()]
        public int IsPass
        {
            get
            {
                return this._isPass;
            }
            set
            {
                this._isPass = value;
            }
        }
        
        [Property()]
        public System.DateTime Checkdate
        {
            get
            {
                return this._checkdate;
            }
            set
            {
                this._checkdate = value;
            }
        }
        
        [Property()]
        public string CheckComment
        {
            get
            {
                return this._checkComment;
            }
            set
            {
                this._checkComment = value;
            }
        }
        
        [Property()]
        public int IsDisplays
        {
            get
            {
                return this._isDisplays;
            }
            set
            {
                this._isDisplays = value;
            }
        }
        
        [Property()]
        public string DisplaysPersonCode
        {
            get
            {
                return this._displaysPersonCode;
            }
            set
            {
                this._displaysPersonCode = value;
            }
        }
        
        [Property()]
        public int CheckSetp
        {
            get
            {
                return this._checkSetp;
            }
            set
            {
                this._checkSetp = value;
            }
        }
        
        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(ApplySheetCheckRecord));
        }
        
        public static ApplySheetCheckRecord[] FindAll()
        {
            return ((ApplySheetCheckRecord[])(ActiveRecordBase.FindAll(typeof(ApplySheetCheckRecord))));
        }
        
        public static ApplySheetCheckRecord Find(int ApplySheetCheckRecordPk)
        {
            return ((ApplySheetCheckRecord)(ActiveRecordBase.FindByPrimaryKey(typeof(ApplySheetCheckRecord), ApplySheetCheckRecordPk,false)));
        }

		public static ApplySheetCheckRecord FindLastStep(int ApplySheetHeadPk,int IsCheckInCompany)
		{
			SimpleQuery query =new SimpleQuery(typeof(ApplySheetCheckRecord),@"from ApplySheetCheckRecord o where o.ApplySheetHeadPk=? and  o.IsCheckInCompany=? order by o.CheckSetp desc ",ApplySheetHeadPk,IsCheckInCompany);
			ApplySheetCheckRecord[] applySheetCheckRecords=(ApplySheetCheckRecord[])ExecuteQuery(query);
			if(applySheetCheckRecords!=null && applySheetCheckRecords.Length>0)
			{
				return applySheetCheckRecords[0];
			}
			else
			{
				return null;
			}
		}

		public static ApplySheetCheckRecord[] FindByApplyHeadKey(int ApplySheetHeadPk)
		{
			SimpleQuery query =new SimpleQuery(typeof(ApplySheetCheckRecord),@"from ApplySheetCheckRecord o where o.ApplySheetHeadPk=?  order by o.CheckSetp desc ",ApplySheetHeadPk);
			return (ApplySheetCheckRecord[])ExecuteQuery(query);
		}

		public static ApplySheetCheckRecord FindLastChecker(int ApplySheetHeadPk)
		{
			//查找最后一个审批人
			SimpleQuery query =new SimpleQuery(typeof(ApplySheetCheckRecord),@"from ApplySheetCheckRecord o where o.ApplySheetHeadPk=? and  o.IsPass=1 order by o.Checkdate desc ",ApplySheetHeadPk);
			ApplySheetCheckRecord[] applySheetCheckRecords=(ApplySheetCheckRecord[])ExecuteQuery(query);
			if(applySheetCheckRecords!=null && applySheetCheckRecords.Length>0)
			{
				return applySheetCheckRecords[0];
			}
			else
			{
				return null;
			}
		}
    }
}
